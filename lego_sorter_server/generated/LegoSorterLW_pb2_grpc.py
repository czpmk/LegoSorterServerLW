# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import LegoSorterLW_pb2 as LegoSorterLW__pb2
from . import Messages_pb2 as Messages__pb2


class LegoSorterLWStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.start = channel.unary_unary(
                '/sorterLW.LegoSorterLW/start',
                request_serializer=Messages__pb2.Empty.SerializeToString,
                response_deserializer=Messages__pb2.Empty.FromString,
                )
        self.stop = channel.unary_unary(
                '/sorterLW.LegoSorterLW/stop',
                request_serializer=Messages__pb2.Empty.SerializeToString,
                response_deserializer=Messages__pb2.Empty.FromString,
                )
        self.photoRequestStream = channel.unary_stream(
                '/sorterLW.LegoSorterLW/photoRequestStream',
                request_serializer=Messages__pb2.Empty.SerializeToString,
                response_deserializer=LegoSorterLW__pb2.PhotoRequest.FromString,
                )


class LegoSorterLWServicer(object):
    """Missing associated documentation comment in .proto file."""

    def start(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def photoRequestStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LegoSorterLWServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'start': grpc.unary_unary_rpc_method_handler(
                    servicer.start,
                    request_deserializer=Messages__pb2.Empty.FromString,
                    response_serializer=Messages__pb2.Empty.SerializeToString,
            ),
            'stop': grpc.unary_unary_rpc_method_handler(
                    servicer.stop,
                    request_deserializer=Messages__pb2.Empty.FromString,
                    response_serializer=Messages__pb2.Empty.SerializeToString,
            ),
            'photoRequestStream': grpc.unary_stream_rpc_method_handler(
                    servicer.photoRequestStream,
                    request_deserializer=Messages__pb2.Empty.FromString,
                    response_serializer=LegoSorterLW__pb2.PhotoRequest.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sorterLW.LegoSorterLW', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LegoSorterLW(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sorterLW.LegoSorterLW/start',
            Messages__pb2.Empty.SerializeToString,
            Messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sorterLW.LegoSorterLW/stop',
            Messages__pb2.Empty.SerializeToString,
            Messages__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def photoRequestStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sorterLW.LegoSorterLW/photoRequestStream',
            Messages__pb2.Empty.SerializeToString,
            LegoSorterLW__pb2.PhotoRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
